>> == ไปที่ไฟล์
cmd >> == ใช้ cmd cdไปที่
=> == พิมพ์คำ สั่ง
คำ() == ขยายความคำ ข้างหน้า

const == ตัวแปลคงที่ ไม่สามารถเปลี่ยนแปลงค่าได้
let == ตัวแปล แปลผัน สามารถเปลี่ยนแปลงค่าได้
	
	ติดตั้ง TS บน cmd ในวินโดว์ หรือ cmd ใน vs code ก็ได้
npm install -g typescript == ติดตั้ง TS
tsc -v == ตรวจสอบเวอร์ชั่น TS

	แปลง TS เป็น JS  == แปลงเฉพาะไฟล์
cmd >> ตำ แหน่งไฟล์tsc ชื่อไฟล์.ts

	สร้างโปรเจคต์ TS 
cmd >> โฟลเดอร์โปรเจค => tsc --init

	ตั่งค่าการ compile มี 2 แบบ
- สร้างโฟลเดอร์ src ในโปรเจคต์ TS  == src เก็บไฟล์ TS
- >> tsconfigl.json ไปที่ /*Emit*/ แก้ตรง out เป็น "outDir":"./dist",

   แบบที่ 1 compile ไฟล์ TS ทุกไฟล์ที่อยู่ในโปรเจค
1.1 cmd >> โฟลเดอร์โปรเจค => tsc == compile ไฟล์ TS ทั้งหมด ให้เป็น JS 
  1.2 ระบบจะสร้างไฟล์ dist ขึ้นมาอัตโนมัต == dist เก็บไฟล์ JS 
  
   แบบที่ 2 compile ไฟล์ TS เฉพาะในโฟล์เดอร์ที่ตั้งไว้ ไม่ compile ไฟล์ TS ทั้งหมดในโปรเจค
2.1 >> tsconfig.json เลื่อนไปล่างสุดของไฟล์  
  2.1 พิมพ์บนบรรทัดบน } สุดท้าย และใส่ , ไว้หลัง } บรรทัดบน => "include": ["src(ช่ื่อโฟลเดอร์ที่ต้องการให้ compile เฉพาะแค่โฟลเดอร์นี้)"]
  2.2 cmd >> โฟลเดอร์โปรเจค => tsc == compile ไฟล์ TS src(เฉพาะที่อยู่ในโฟลเดอร์ที่ตั้งไว้) ให้เป็น JS 
  
	Watch Mode == auto compile
cmd >> โฟลเดอร์โปรเจค =>
  1 tsc -w 	== แบบย่อ
  2 tsc --watch == แบบเต็ม






